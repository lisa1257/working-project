# -*- coding: utf-8 -*-
"""tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lLZhbY9Ta10SBgU5mPXEdqV_1BLnh63r
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler, MinMaxScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.feature_selection import SelectFromModel
from sklearn.decomposition import PCA
from pathlib import Path

tree_data=pd.read_csv('/content/drive/MyDrive/working project/workingproject_tree_data.csv')
tree_data

df = pd.read_csv('/content/drive/MyDrive/working project/workingproject_feature1.csv')
df = df.drop(columns=['Unnamed: 0'])
df

print(np.any(np.isnan(df)))

df["output"]

# tree_data = importances

selected_data = []

for i in range(1874):
  if tree_data['importance'][i] >0:
    select = tree_data['features'][i]
    selected_data.append(select)

    # print(selected_data)
  else:
    continue
    # selected_data = pd.DataFrame(selected_data)
    # tree_flow=pd.concat([tree_flow,selected_data])

selected_data

print(df['MOMI-Y'])

# selected_data =pd.DataFrame(selected_data)
tree_flow = pd.DataFrame()


len(selected_data)
for j in range(len(selected_data)):
  i=selected_data[j]
  s=df[i]
  s.name = i
  tree = pd.DataFrame(s)
  tree_flow = pd.concat([tree,tree_flow],axis=1)
print(tree_flow)
  # if i not in df.columns:
  #  table=pd.concat([table,select_data])


  # tree_flow = pd.concat([tree,tree_flow])
# print(tree_flow)
  # tree_flow=pd.concat([tree,tree_flow])

from pathlib import Path
filepath = Path('/content/gdrive/MyDrive/workingproject_select.csv')
filepath.parent.mkdir(parents=True, exist_ok=True)
tree_flow.to_csv(filepath)